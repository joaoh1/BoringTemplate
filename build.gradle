plugins {
	id 'fabric-loom' version '0.5-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name

if (System.env.GITHUB_ACTIONS == "true") {
	version = "${project.mod_version}-github.${System.env.GITHUB_RUN_NUMBER}"
} else {
	version = project.mod_version
}

group = project.maven_group

repositories {
	mavenCentral()
}

dependencies {
	// to change the versions, see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8 and that the build works on Java 8.
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.release = 8
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this task, sources will not be generated.
	withSourceJars()

	// if Java 8 is used, demand the next LTS release (Java 11)
	toolchain {
		if (JavaVersion.current().isJava8()) {
			languageVersion = JavaLanguageVersion.of(11)
		}
	}
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}